[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\generatorsNames.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\filtersNames.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\metricsNames.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\inputFieldValidators.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"22"},{"size":333,"mtime":1610724517922,"results":"23","hashOfConfig":"24"},{"size":645,"mtime":1610724506872,"results":"25","hashOfConfig":"24"},{"size":8557,"mtime":1610724686930,"results":"26","hashOfConfig":"24"},{"size":2966,"mtime":1610723338447,"results":"27","hashOfConfig":"24"},{"size":5316,"mtime":1610723220572,"results":"28","hashOfConfig":"24"},{"size":540,"mtime":1610300242699,"results":"29","hashOfConfig":"24"},{"size":550,"mtime":1610723307965,"results":"30","hashOfConfig":"24"},{"size":2436,"mtime":1610300210611,"results":"31","hashOfConfig":"24"},{"size":4626,"mtime":1610300208180,"results":"32","hashOfConfig":"24"},{"size":2265,"mtime":1610054779439,"results":"33","hashOfConfig":"24"},{"size":1855,"mtime":1610721246704,"results":"34","hashOfConfig":"24"},{"size":524,"mtime":1610301507451,"results":"35","hashOfConfig":"24"},{"size":347,"mtime":1610301308344,"results":"36","hashOfConfig":"24"},{"size":261,"mtime":1610721313852,"results":"37","hashOfConfig":"24"},{"size":280,"mtime":1610721299257,"results":"38","hashOfConfig":"24"},{"size":283,"mtime":1610721290328,"results":"39","hashOfConfig":"24"},{"size":256,"mtime":1610721284158,"results":"40","hashOfConfig":"24"},{"size":218,"mtime":1610721238933,"results":"41","hashOfConfig":"24"},{"size":252,"mtime":1610721295080,"results":"42","hashOfConfig":"24"},{"size":252,"mtime":1610721308067,"results":"43","hashOfConfig":"24"},{"size":1056,"mtime":1610722020302,"results":"44","hashOfConfig":"24"},{"size":243,"mtime":1610720705055,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qlwrk8",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["93"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["94","95"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",["96","97"],"//\r\n//  Blob.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { integerOnlyField, floatOnlyBetweenOneAndZeroField } from '../../../utils/inputFieldValidators';\r\nimport './Blobs.css';\r\n\r\n// If one were to do SoC on generators components, following values will be passed into props:\r\n// api endpoint\r\n// Textfields and other UI components\r\n\r\nconst Blobs = () => {\r\n    const [xDimension, setXDimension] = useState(500);\r\n    const [yDimension, setYDimension] = useState(500);\r\n    const [porosity, setPorosity] = useState(0.5);\r\n    const [blobiness, setBlobiness] = useState(1);\r\n    const [blob, setBlob] = useState('');\r\n    const [blobGenerationTime, setBlobGenerationTime] = useState('');\r\n\r\n    // backendRootEndpoint should be part of store in Redux (globalized state between components)\r\n    const backendRootEndpoint = 'http://localhost:8000/';\r\n\r\n    const generateBlob = () => {\r\n        const startTime = moment();\r\n\r\n        axios.put(`${backendRootEndpoint}generators/blobs/1/`, {\r\n                porosity,\r\n                blobiness,\r\n                dimension_x: xDimension,\r\n                dimension_y: yDimension\r\n            }\r\n        ).then(({ data: { generated_image } }) => {\r\n            setBlob(generated_image);\r\n            const timeElapsed = ((moment() - startTime) / 1000).toString();\r\n            const timeElapsedFormatted = `Time taken to generate blob: ${timeElapsed} seconds.`;\r\n            setBlobGenerationTime(timeElapsedFormatted);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n            setBlobGenerationTime(\"Looks like an error has occurred...\");\r\n        });\r\n    }\r\n\r\n    const validateParams = () => {\r\n        const blobParameters = [xDimension, yDimension, porosity, blobiness];\r\n        return blobParameters.includes(\"\") ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blobButton\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={() => generateBlob()} \r\n                    disabled={validateParams()}\r\n                >\r\n                    Generate Image\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"blobTextFields\">\r\n                <div className=\"blobTextField\">\r\n                    <TextField\r\n                        required\r\n                        id=\"xDimensionInput\"\r\n                        label=\"Voxels in x-direction\"\r\n                        defaultValue=\"500\"\r\n                        helperText=\"Integer values only\"\r\n                        variant=\"outlined\"\r\n                        onInput={(e) => {\r\n                            const onlyIntegers = integerOnlyField(e);\r\n                            setXDimension(onlyIntegers);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"blobTextField\">\r\n                    <TextField\r\n                        required\r\n                        id=\"yDimensionInput\"\r\n                        label=\"Voxels in y-direction\"\r\n                        defaultValue=\"500\"\r\n                        helperText=\"Integer values only\"\r\n                        variant=\"outlined\"\r\n                        onInput={(e) => {\r\n                            const onlyIntegers = integerOnlyField(e);\r\n                            setYDimension(onlyIntegers);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"blobTextField\">\r\n                    <TextField\r\n                        required\r\n                        id=\"porosityInput\"\r\n                        label=\"Porosity\"\r\n                        defaultValue=\"0.5\"\r\n                        helperText=\"Decimal value betweeen 0 and 1.\"\r\n                        variant=\"outlined\"\r\n                        onInput={(e) => {\r\n                            const onlyFloats = floatOnlyBetweenOneAndZeroField(e);\r\n                            setPorosity(onlyFloats);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"blobTextField\">\r\n                    <TextField\r\n                        required\r\n                        id=\"blobinessInput\"\r\n                        label=\"Blobiness\"\r\n                        defaultValue=\"1\"\r\n                        helperText=\"Integer values only\"\r\n                        variant=\"outlined\"\r\n                        onInput={(e) => {\r\n                            const onlyIntegers = integerOnlyField(e);\r\n                            setBlobiness(onlyIntegers);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                blob !== '' \r\n                &&\r\n                <div className=\"blobImageWrapper\">\r\n                    <img \r\n                        className=\"blobImage\" \r\n                        src={`data:image/png;base64,${blob}`} \r\n                    />\r\n                    <div>{blobGenerationTime}</div>\r\n                </div> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blobs;\r\n",["98","99"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["100"],"//\r\n//  LocalThickness.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport './LocalThickness.css';\r\n\r\nconst LocalThickness = () => {\r\n    // https://github.com/PMEAL/porespy/blob/dev/porespy/filters/__funcs__.py\r\n    // These are filters that have \"im\" as a parameter and remaining parameters have default values.\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Hello from Local Thickness Component\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalThickness;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\generatorsNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\filtersNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\metricsNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\inputFieldValidators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],{"ruleId":"101","severity":1,"message":"102","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":6,"column":27,"nodeType":"103","messageId":"104","endLine":6,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":61,"column":5,"nodeType":"108","messageId":"109","endLine":61,"endColumn":9},{"ruleId":"101","severity":1,"message":"105","line":6,"column":27,"nodeType":"103","messageId":"104","endLine":6,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":130,"column":21,"nodeType":"112","endLine":133,"endColumn":23},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"101","severity":1,"message":"117","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":13},"no-unused-vars","'AboutPage' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]