[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6"},{"size":262,"mtime":1607826557242,"results":"7","hashOfConfig":"8"},{"size":540,"mtime":1607826820940,"results":"9","hashOfConfig":"8"},{"size":751,"mtime":1609301592012,"results":"10","hashOfConfig":"8"},{"size":211,"mtime":1607826792259,"results":"11","hashOfConfig":"8"},{"size":5617,"mtime":1609646105499,"results":"12","hashOfConfig":"8"},{"size":3055,"mtime":1609301100837,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qlwrk8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["29","30"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["31","32"],"import React, { useState, useEffect } from 'react';\r\nimport Blobs from '../Generators/Blobs/Blobs';\r\nimport LocalThickness from '../Filters/LocalThickness/LocalThickness';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"title\">\r\n                PoreSpy\r\n            </div>\r\n            \r\n            <div className=\"description\">\r\n                A python library of image analysis tools used to extract information from 3D images of porous materials\r\n            </div>\r\n\r\n            <div>\r\n                <Blobs />\r\n                <br />\r\n                <LocalThickness />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",["33","34"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["35","36","37"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport axios from 'axios';\r\nimport './LocalThickness.css';\r\n\r\nconst LocalThickness = () => {\r\n    // These filters are taken from here:\r\n    // https://github.com/PMEAL/porespy/blob/dev/porespy/filters/__funcs__.py\r\n    // These are filters that have \"im\" as a parameter and remaining parameters have default values.\r\n    \r\n    //  TODO: ask what filters will be actually used?\r\n    const filters = [\r\n        \"Trim Small Clusters\",\r\n        \"Hold Peaks\",\r\n        \"Distance Transform Lin\",\r\n        \"Snow Partitioning\",\r\n        \"Snow Partitioning N\",\r\n        \"Find Disconnected Voxels\",\r\n        \"Fill Blind Pores\",\r\n        \"Trim Floating Solid\",\r\n        \"Trim Nonpercolating Paths\",\r\n        \"Trim Extrema\",\r\n        \"Flood\",\r\n        \"Region Size\",\r\n        \"Apply Chords\",\r\n        \"Apply Chords 3D\",\r\n        \"Local Thickness\",\r\n        \"Porosimetry\",\r\n        \"Trim Disconnected Blobs\",\r\n        \"NPhase Border\",\r\n        \"Snow Partitioning Parallel\",\r\n        \"Chunked Snow\",\r\n        \"Pad\"\r\n    ];\r\n\r\n    const handleChange = (e) => {\r\n        // For now, this function displays the chosen Filter value to the console.\r\n        // It is the same as the checkbox label, but the spaces are replaced with empty strings\r\n        console.log(e.target.name);\r\n    }\r\n\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     root: {\r\n    //       display: 'flex',\r\n    //       flexDirection: 'row'\r\n    //     },\r\n    //     formControl: {\r\n    //       margin: theme.spacing(3),\r\n    //     },\r\n    // }));\r\n\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filters\">\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Filters</FormLabel>\r\n                        <FormGroup>\r\n                            {\r\n                                filters.map((filter) => {\r\n                                    const filterPythonName = filter.replace(/\\s/g, '_').toLowerCase();\r\n                                    return (\r\n                                        <FormControlLabel \r\n                                            control={<Checkbox name={filterPythonName}/>}\r\n                                            label={filter}\r\n                                            onChange={(e) => handleChange(e)}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </FormGroup>\r\n                </FormControl>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalThickness;\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":140,"column":21,"nodeType":"49","endLine":143,"endColumn":23},{"ruleId":"42","severity":1,"message":"50","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":20},{"ruleId":"42","severity":1,"message":"51","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":22},{"ruleId":"42","severity":1,"message":"52","line":9,"column":8,"nodeType":"44","messageId":"45","endLine":9,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'FormHelperText' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]