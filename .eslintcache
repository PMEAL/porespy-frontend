[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\generatorsNames.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\filtersNames.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\metricsNames.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\inputFieldValidators.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"22","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js":"23","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js":"24","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js":"25","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js":"26","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js":"27","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js":"28","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js":"29","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js":"30","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js":"31"},{"size":524,"mtime":1611956950703,"results":"32","hashOfConfig":"33"},{"size":2328,"mtime":1612114506161,"results":"34","hashOfConfig":"33"},{"size":10357,"mtime":1612056785478,"results":"35","hashOfConfig":"33"},{"size":3819,"mtime":1610816839453,"results":"36","hashOfConfig":"33"},{"size":11381,"mtime":1612666085587,"results":"37","hashOfConfig":"33"},{"size":540,"mtime":1610300242699,"results":"38","hashOfConfig":"33"},{"size":550,"mtime":1610723307965,"results":"39","hashOfConfig":"33"},{"size":2233,"mtime":1612208109428,"results":"40","hashOfConfig":"33"},{"size":4626,"mtime":1610300208180,"results":"41","hashOfConfig":"33"},{"size":2377,"mtime":1610300213066,"results":"42","hashOfConfig":"33"},{"size":2050,"mtime":1612053589760,"results":"43","hashOfConfig":"33"},{"size":577,"mtime":1610816574601,"results":"44","hashOfConfig":"33"},{"size":400,"mtime":1610816628168,"results":"45","hashOfConfig":"33"},{"size":4296,"mtime":1611028874835,"results":"46","hashOfConfig":"33"},{"size":339,"mtime":1610816736278,"results":"47","hashOfConfig":"33"},{"size":343,"mtime":1610816760934,"results":"48","hashOfConfig":"33"},{"size":309,"mtime":1610816784410,"results":"49","hashOfConfig":"33"},{"size":263,"mtime":1610816772830,"results":"50","hashOfConfig":"33"},{"size":304,"mtime":1610816747508,"results":"51","hashOfConfig":"33"},{"size":304,"mtime":1610816681137,"results":"52","hashOfConfig":"33"},{"size":1056,"mtime":1610722020302,"results":"53","hashOfConfig":"33"},{"size":293,"mtime":1610816669691,"results":"54","hashOfConfig":"33"},{"size":319,"mtime":1610816711276,"results":"55","hashOfConfig":"33"},{"size":304,"mtime":1610816723806,"results":"56","hashOfConfig":"33"},{"size":383,"mtime":1612055669142,"results":"57","hashOfConfig":"33"},{"size":373,"mtime":1612055639711,"results":"58","hashOfConfig":"33"},{"size":674,"mtime":1612055720126,"results":"59","hashOfConfig":"33"},{"size":667,"mtime":1612055194777,"results":"60","hashOfConfig":"33"},{"size":369,"mtime":1612055693927,"results":"61","hashOfConfig":"33"},{"size":395,"mtime":1612055620330,"results":"62","hashOfConfig":"33"},{"size":279,"mtime":1612111829563,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"qlwrk8",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["135","136"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["137","138"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["139","140"],"//\r\n//  LandingPage.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\r\nimport AboutPage from '../AboutPage/AboutPage';\r\nimport ContactPage from '../ContactPage/ContactPage';\r\nimport RenderGenerator from '../RenderGenerator/RenderGenerator';\r\nimport RenderFilter from '../RenderFilter/RenderFilter';\r\nimport RenderMetric from '../RenderMetric/RenderMetric';\r\n\r\n// generatorsNames, filtersNames, and so on should pull from the store.\r\nimport { generatorsNames } from '../../utils/generatorsNames';\r\nimport { filtersNames } from '../../utils/filtersNames';\r\nimport { metricsNames } from '../../utils/metricsNames';\r\n// import { networksNames } from '../../utils/networksNames';\r\nimport './LandingPage.css';\r\n\r\n// Width of menu in pixels\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        paddingLeft: 240,\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n    collapseMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n}));\r\n\r\n// porespyModules contains the menu names that are then called with .map() to create on the UI.\r\nconst porespyModules = ['Generators', 'Filters', 'Metrics', 'About', 'Contact'];\r\n\r\nconst LandingPage = (props) => {\r\n    const [openGenerators, setOpenGenerators] = useState(false);\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [openMetrics, setOpenMetrics] = useState(false);\r\n\r\n    const [chosenModule, setChosenModule] = useState(\"Generators\");\r\n    const [chosenGenerator, setChosenGenerator] = useState(\"\");\r\n    const [chosenFilter, setChosenFilter] = useState(\"Apply Chords\");\r\n    const [chosenMetric, setChosenMetric] = useState(\"Chord Counts\");\r\n    const [renderPage, setRenderPage] = useState(props.page);\r\n    // const [chosenNetwork, setChosenNetwork] = useState(\"\"); // should a default to the chosenNetwork state variable.\r\n\r\n    const handleClick = (text) => {        \r\n        // Switch/Case block checks to see which module is chosen and opens the <Collapse /> component by calling setOpenGenerators(), setOpenFilters(), and setOpenMetrics()\r\n        // This block also calls setRenderPage() to render the correct page from the router (\"/\", \"/about\", \"/contact\")\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setOpenGenerators(!openGenerators);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setOpenFilters(!openFilters);\r\n                setRenderPage(\"\");\r\n                break; \r\n            case \"Metrics\":\r\n                setOpenMetrics(!openMetrics);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"About\":\r\n                setRenderPage(\"about\");\r\n                break;\r\n            case \"Contact\":\r\n                setRenderPage(\"contact\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        // chosenModule state records which module (generators, filters, etc.) is chosen by the user.\r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    };\r\n\r\n    const handleFunctionClick = (text, chosenFunc) => {\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setChosenGenerator(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setChosenFilter(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Metrics\":\r\n                setChosenMetric(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    }\r\n\r\n    const renderSubMenus = (text, modules) => (\r\n        modules.map((g) => (\r\n            <ListItem \r\n                button\r\n                className={classes.nested} \r\n                onClick={() => handleFunctionClick(text, g.name)} \r\n                component={Link}\r\n                to={`/`}\r\n            >\r\n                <ListItemText primary={`${g.name}`} />\r\n            </ListItem>\r\n        ))\r\n    )\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            PoreSpy\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <BrowserRouter>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true\r\n                        }}\r\n                    >\r\n                        <Toolbar />\r\n                        <div className={classes.drawerContainer}>\r\n                            <List\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                className={classes.root}\r\n                            >\r\n                                {\r\n                                    porespyModules.map((text) => (                                        \r\n                                        <div>\r\n                                            <ListItem \r\n                                                button \r\n                                                key={text} \r\n                                                component={Link} \r\n                                                to={text === \"About\" || text === \"Contact\" ? `/${text.toLowerCase()}` : `/`} \r\n                                                onClick={() => handleClick(text)}\r\n                                            >\r\n                                                <ListItemText primary={text} />\r\n                                                {(text !== \"About\" && text !== \"Contact\") && <KeyboardArrowDownIcon />}\r\n                                            </ListItem>\r\n                                            <Collapse \r\n                                                in={((text === \"Generators\" && openGenerators) || (text === \"Filters\" && openFilters) || (text === \"Metrics\" && openMetrics))} \r\n                                                timeout=\"auto\" \r\n                                                unmountOnExit\r\n                                            >\r\n                                                <List component=\"div\" disablePadding>\r\n                                                    {(text === \"Generators\") && renderSubMenus(text, generatorsNames)}\r\n                                                    {(text === \"Filters\") && renderSubMenus(text, filtersNames)}\r\n                                                    {(text === \"Metrics\") && renderSubMenus(text, metricsNames)}\r\n                                                </List>\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </div>\r\n                    </Drawer>\r\n\r\n                    <main className={classes.content}>\r\n                        <Toolbar />\r\n                        <div className=\"title\">\r\n                            PoreSpy\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            Porous Media Image Analysis in Python\r\n                        </div>\r\n\r\n                        {/* The following 3 conditional render statements and the <switch></switch> element display the components based on which boolean is true */}\r\n                        {/* Rendering of the <AboutPage /> and <ContactPage /> is in the <switch></switch> element to preserve the routing (\"/about\", \"/contact\") */}\r\n                        { chosenModule === \"Generators\" && renderPage === \"\" && <RenderGenerator chosenFunction={chosenGenerator} />}\r\n                        { chosenModule === \"Filters\" && renderPage === \"\" && <RenderFilter chosenFunction={chosenFilter} /> }\r\n                        { chosenModule === \"Metrics\" && renderPage === \"\" && <RenderMetric chosenFunction={chosenMetric} /> }                        \r\n                        <Switch>\r\n                            <Route path=\"/about\" render={() => <AboutPage />} />\r\n                            <Route path=\"/contact\" render={() => <ContactPage />} />\r\n                        </Switch>                        \r\n                    </main>\r\n                </BrowserRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(undefined, undefined)(LandingPage);\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",["141","142"],"//\r\n//  AboutPage.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './AboutPage.css';\r\n\r\n// Width of menu in pixels\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        paddingLeft: 240,\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n        // color: 'darkGrey',\r\n        // fontSize: '10',\r\n    },\r\n    collapseMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n}));\r\n\r\nconst AboutPage = () => {\r\n    const preventDefault = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n\r\n            <div>\r\n                Cite as:\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                Gostick J, Khan ZA, Tranter TG, Kok MDR, Agnaou M, Sadeghi MA, Jervis R. PoreSpy: A Python Toolkit for Quantitative Analysis of Porous Media Images. Journal of Open Source Software, 2019. doi:10.21105/joss.01296\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                What is PoreSpy?\r\n            </div>\r\n\r\n            <br />\r\n            \r\n            <div>\r\n                PoreSpy is a collection of image analysis tool used to extract information from 3D images of porous materials (typically obtained from X-ray tomography). \r\n                There are many packages that offer generalized image analysis tools (i.e Skimage and Scipy.NDimage in the Python environment, ImageJ, MatLab’s Image Processing Toolbox), but the all require building up complex scripts or macros to accomplish tasks of specific use to porous media. \r\n                The aim of PoreSpy is to provide a set of pre-written tools for all the common porous media measurements.\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                PoreSpy relies heavily on two general image analysis packages:&nbsp;\r\n                <Link \r\n                    href=\"https://docs.scipy.org/doc/scipy/reference/ndimage.html\"\r\n                    preventDefault={preventDefault}\r\n                    target=\"_blank\"\r\n                >\r\n                    scipy.ndimage \r\n                </Link>\r\n                &nbsp;and&nbsp;\r\n                <Link \r\n                    href=\"https://scikit-image.org/\"\r\n                    preventDefault={preventDefault}\r\n                    target=\"_blank\"\r\n                >\r\n                    scikit-image\r\n                </Link>\r\n                &nbsp;also known as skimage. \r\n                The former contains an assortment of general image analysis tools such as image morphology filters, while the latter offers more complex but still general functions such as watershed segmentation. \r\n                PoreSpy does not duplicate any of these general functions so you will also have to install and learn how to use them to get the most from PoreSpy. \r\n                The functions in PoreSpy are generally built up using several of the more general functions offered by skimage and scipy. \r\n                There are a few functions in PoreSpy that are implemented natively, but only when necessary. \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",["143","144"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["145"],"//\r\n//  LocalThickness.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport './LocalThickness.css';\r\n\r\nconst LocalThickness = () => {\r\n    // https://github.com/PMEAL/porespy/blob/dev/porespy/filters/__funcs__.py\r\n    // These are filters that have \"im\" as a parameter and remaining parameters have default values.\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Hello from Local Thickness Component\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalThickness;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\generatorsNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\filtersNames.js",[],["146","147"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\metricsNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"//\r\n//  BundleOfTubes.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { integerOnlyField, floatOnlyBetweenOneAndZeroField } from '../../../utils/inputFieldValidators';\r\nimport './BundleOfTubes.css';\r\n\r\nconst BundleOfTubes = () => {    \r\n    \r\n    const fieldsInfo = {\r\n        \"xDimension\": {\r\n            helperText: \"Integer values only.\",\r\n            id: \"xDimensionInput\",\r\n            label: \"Voxels in x-direction\",\r\n            value: \"500\",\r\n            type: \"int\",\r\n            required: true\r\n        }, \"yDimension\": {\r\n            helperText: \"Integer values only.\",\r\n            id: \"yDimensionInput\",\r\n            label: \"Voxels in y-direction\",\r\n            value: \"500\",\r\n            type: \"int\",\r\n            required: true\r\n        }, \"zDimension\": {\r\n            helperText: \"Integer values only.\",\r\n            id: \"zDimensionInput\",\r\n            label: \"Voxels in z-direction\",\r\n            value: \"0\",\r\n            type: \"int\",\r\n            required: false\r\n        }, \"spacing\": {\r\n            helperText: \"Integer values only.\",\r\n            id: \"spacingInput\",\r\n            label: \"Spacing\",\r\n            value: \"1\",\r\n            type: \"int\",\r\n            required: true\r\n        }\r\n    };\r\n\r\n    // pieces of state to disregard\r\n    const [xDimension, setXDimension] = useState();\r\n    const [yDimension, setYDimension] = useState();\r\n    const [zDimension, setZDimension] = useState();\r\n    const [spacing, setSpacing] = useState();\r\n\r\n\r\n\r\n    // pieces of state to actually use:\r\n    const [params, setParams] = useState(fieldsInfo);\r\n    const [validatedParams, setValidatedParams] = useState(false);\r\n    const [bundleOfTubes, setBundleOfTubes] = useState('');\r\n    const [bundlesOfTubesGenerationTime, setBundlesOfTubesGenerationTime] = useState('');\r\n\r\n    const backendRootEndpoint = 'http://localhost:8000/';\r\n\r\n    const generateBundleOfTubes = () => {\r\n        console.log(\"hello from generateBundleOfTubes()\");\r\n\r\n        // axios.put(`${backendRootEndpoint}generators/bundleOfTubes/1/`, {\r\n        //     // populate data entered here:\r\n        // }).then((response) => {\r\n        //     console.log(response);\r\n        // }).catch((e) => {\r\n        //     // TODO: better error catching method?\r\n        //     console.log(e);\r\n        // })\r\n\r\n    }\r\n\r\n    const validateParams = () => {\r\n        const bundleOfTubesParameters = [xDimension, yDimension, zDimension, spacing];\r\n        return bundleOfTubesParameters.includes(\"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bundleOfTubesDescription\">\r\n                Creates a 3D image of a bundle of tubes, in the form of a rectangular plate with randomly sized holes through it.\r\n            </div>\r\n\r\n            <div className=\"bundleOfTubesTextFields\">\r\n                {\r\n                    // Dynamically creates <TextFields /> based on entries in the params object\r\n                    Object.keys(params).map((p) => (\r\n                        <div className=\"bundleOfTubesTextField\">\r\n                            <TextField \r\n                                required={params[p].required}\r\n                                id={params[p].id}\r\n                                label={params[p].label}\r\n                                defaultValue={params[p].value}\r\n                                helperText={params[p].helperText}\r\n                                variant={\"outlined\"}\r\n                                // onInput={(e) => parseEnteredValues(e, p)}\r\n                            />\r\n                        </div>\r\n                        \r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div className=\"bundleOfTubesButton\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={() => generateBundleOfTubes()}\r\n                    disabled={validateParams()}\r\n                >\r\n                    Generate Image\r\n                </Button>\r\n            </div>\r\n\r\n            {\r\n                //\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BundleOfTubes;\r\n",["164","165"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],["166","167"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],["168","169"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\inputFieldValidators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":7,"column":35,"nodeType":"176","messageId":"177","endLine":7,"endColumn":43},{"ruleId":"178","severity":1,"message":"179","line":29,"column":8,"nodeType":"180","endLine":29,"endColumn":10,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":6,"column":27,"nodeType":"176","messageId":"177","endLine":6,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":62,"column":5,"nodeType":"185","messageId":"186","endLine":62,"endColumn":9},{"ruleId":"183","severity":1,"message":"184","line":39,"column":5,"nodeType":"185","messageId":"186","endLine":39,"endColumn":9},{"ruleId":"174","severity":1,"message":"187","line":58,"column":11,"nodeType":"176","messageId":"177","endLine":58,"endColumn":18},{"ruleId":"174","severity":1,"message":"188","line":16,"column":10,"nodeType":"176","messageId":"177","endLine":16,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":263,"column":21,"nodeType":"191","endLine":266,"endColumn":23},{"ruleId":"174","severity":1,"message":"192","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":13},{"ruleId":"170","replacedBy":"193"},{"ruleId":"172","replacedBy":"194"},{"ruleId":"174","severity":1,"message":"182","line":6,"column":27,"nodeType":"176","messageId":"177","endLine":6,"endColumn":36},{"ruleId":"174","severity":1,"message":"192","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":13},{"ruleId":"174","severity":1,"message":"195","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":26},{"ruleId":"174","severity":1,"message":"196","line":10,"column":28,"nodeType":"176","messageId":"177","endLine":10,"endColumn":59},{"ruleId":"174","severity":1,"message":"197","line":48,"column":24,"nodeType":"176","messageId":"177","endLine":48,"endColumn":37},{"ruleId":"174","severity":1,"message":"198","line":49,"column":24,"nodeType":"176","messageId":"177","endLine":49,"endColumn":37},{"ruleId":"174","severity":1,"message":"199","line":50,"column":24,"nodeType":"176","messageId":"177","endLine":50,"endColumn":37},{"ruleId":"174","severity":1,"message":"200","line":51,"column":21,"nodeType":"176","messageId":"177","endLine":51,"endColumn":31},{"ruleId":"174","severity":1,"message":"201","line":56,"column":20,"nodeType":"176","messageId":"177","endLine":56,"endColumn":29},{"ruleId":"174","severity":1,"message":"202","line":57,"column":12,"nodeType":"176","messageId":"177","endLine":57,"endColumn":27},{"ruleId":"174","severity":1,"message":"203","line":57,"column":29,"nodeType":"176","messageId":"177","endLine":57,"endColumn":47},{"ruleId":"174","severity":1,"message":"204","line":58,"column":12,"nodeType":"176","messageId":"177","endLine":58,"endColumn":25},{"ruleId":"174","severity":1,"message":"205","line":58,"column":27,"nodeType":"176","messageId":"177","endLine":58,"endColumn":43},{"ruleId":"174","severity":1,"message":"206","line":59,"column":12,"nodeType":"176","messageId":"177","endLine":59,"endColumn":40},{"ruleId":"174","severity":1,"message":"207","line":59,"column":42,"nodeType":"176","messageId":"177","endLine":59,"endColumn":73},{"ruleId":"174","severity":1,"message":"208","line":61,"column":11,"nodeType":"176","messageId":"177","endLine":61,"endColumn":30},{"ruleId":"170","replacedBy":"209"},{"ruleId":"172","replacedBy":"210"},{"ruleId":"170","replacedBy":"211"},{"ruleId":"172","replacedBy":"212"},{"ruleId":"170","replacedBy":"213"},{"ruleId":"172","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["217"],"'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'classes' is assigned a value but never used.","'BluetoothDisabled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.",["215"],["216"],"'integerOnlyField' is defined but never used.","'floatOnlyBetweenOneAndZeroField' is defined but never used.","'setXDimension' is assigned a value but never used.","'setYDimension' is assigned a value but never used.","'setZDimension' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","'setParams' is assigned a value but never used.","'validatedParams' is assigned a value but never used.","'setValidatedParams' is assigned a value but never used.","'bundleOfTubes' is assigned a value but never used.","'setBundleOfTubes' is assigned a value but never used.","'bundlesOfTubesGenerationTime' is assigned a value but never used.","'setBundlesOfTubesGenerationTime' is assigned a value but never used.","'backendRootEndpoint' is assigned a value but never used.",["215"],["216"],["215"],["216"],["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [props]",{"range":"220","text":"221"},[1045,1047],"[props]"]