[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js":"22","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js":"23","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js":"24","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js":"25","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js":"26","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js":"27","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js":"28","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js":"29","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js":"30","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\parseModuleNames.js":"31","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js":"32","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js":"33"},{"size":524,"mtime":1611956950703,"results":"34","hashOfConfig":"35"},{"size":2344,"mtime":1613343180787,"results":"36","hashOfConfig":"35"},{"size":13120,"mtime":1613344015823,"results":"37","hashOfConfig":"35"},{"size":2897,"mtime":1613361211488,"results":"38","hashOfConfig":"35"},{"size":10472,"mtime":1613411832508,"results":"39","hashOfConfig":"35"},{"size":540,"mtime":1610300242699,"results":"40","hashOfConfig":"35"},{"size":581,"mtime":1613360916524,"results":"41","hashOfConfig":"35"},{"size":2186,"mtime":1612817969761,"results":"42","hashOfConfig":"35"},{"size":577,"mtime":1610816574601,"results":"43","hashOfConfig":"35"},{"size":400,"mtime":1610816628168,"results":"44","hashOfConfig":"35"},{"size":7168,"mtime":1613413465569,"results":"45","hashOfConfig":"35"},{"size":339,"mtime":1610816736278,"results":"46","hashOfConfig":"35"},{"size":343,"mtime":1610816760934,"results":"47","hashOfConfig":"35"},{"size":309,"mtime":1610816784410,"results":"48","hashOfConfig":"35"},{"size":263,"mtime":1610816772830,"results":"49","hashOfConfig":"35"},{"size":304,"mtime":1610816747508,"results":"50","hashOfConfig":"35"},{"size":304,"mtime":1610816681137,"results":"51","hashOfConfig":"35"},{"size":293,"mtime":1610816669691,"results":"52","hashOfConfig":"35"},{"size":319,"mtime":1610816711276,"results":"53","hashOfConfig":"35"},{"size":304,"mtime":1610816723806,"results":"54","hashOfConfig":"35"},{"size":383,"mtime":1612055669142,"results":"55","hashOfConfig":"35"},{"size":373,"mtime":1612055639711,"results":"56","hashOfConfig":"35"},{"size":806,"mtime":1613343151480,"results":"57","hashOfConfig":"35"},{"size":667,"mtime":1612055194777,"results":"58","hashOfConfig":"35"},{"size":369,"mtime":1612055693927,"results":"59","hashOfConfig":"35"},{"size":395,"mtime":1612055620330,"results":"60","hashOfConfig":"35"},{"size":279,"mtime":1612111829563,"results":"61","hashOfConfig":"35"},{"size":1418,"mtime":1612815137654,"results":"62","hashOfConfig":"35"},{"size":763,"mtime":1612815095294,"results":"63","hashOfConfig":"35"},{"size":471,"mtime":1613186483445,"results":"64","hashOfConfig":"35"},{"size":356,"mtime":1613187853575,"results":"65","hashOfConfig":"35"},{"size":410,"mtime":1613343093881,"results":"66","hashOfConfig":"35"},{"size":308,"mtime":1613342964346,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"qlwrk8",{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["137","138"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["139","140"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["141"],"//\r\n//  LandingPage.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport AboutPage from '../AboutPage/AboutPage';\r\nimport ContactPage from '../ContactPage/ContactPage';\r\nimport RenderGenerator from '../RenderGenerator/RenderGenerator';\r\nimport RenderFilter from '../RenderFilter/RenderFilter';\r\nimport RenderMetric from '../RenderMetric/RenderMetric';\r\nimport { parseName } from '../../utils/parseModuleNames';\r\nimport './LandingPage.css';\r\n\r\n// Width of menu in pixels\r\nconst drawerWidth = 240;\r\n\r\n// TODO: abstract this object into another file to clean up this component?\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    contentOuter: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        paddingLeft: 240,\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4)\r\n    },\r\n    collapseMenu: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }, \r\n    gridList: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth: 160,\r\n        minHeight: '95%',\r\n        position: 'absolute',\r\n        right: 3,\r\n        top: 64\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\nconst LandingPage = (props) => {\r\n    const [openGenerators, setOpenGenerators] = useState(false);\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [openMetrics, setOpenMetrics] = useState(false);\r\n\r\n    const [chosenModule, setChosenModule] = useState(\"Generators\");\r\n    const [chosenGenerator, setChosenGenerator] = useState(\"\");\r\n    const [chosenFilter, setChosenFilter] = useState(\"Apply Chords\");\r\n    const [chosenMetric, setChosenMetric] = useState(\"Chord Counts\");\r\n    // const [chosenNetwork, setChosenNetwork] = useState(\"\"); // should a default to the chosenNetwork state variable.\r\n    const [renderPage, setRenderPage] = useState(props.page);\r\n    \r\n    // porespyModules contains the menu names that are then called with .map() to create on the UI.\r\n    const porespyModules = ['Generators', 'Filters', 'Metrics', 'About', 'Contact'];\r\n    const funcs = useSelector((state) => (state));\r\n    const generatorsNamesStore = funcs.porespyFuncs.hasOwnProperty('generators') ? Object.keys(funcs.porespyFuncs.generators) : [];\r\n    const filtersNamesStore = funcs.porespyFuncs.hasOwnProperty('filters') ? Object.keys(funcs.porespyFuncs.filters) : [];\r\n    const metricsNamesStore = funcs.porespyFuncs.hasOwnProperty('metrics') ? Object.keys(funcs.porespyFuncs.metrics) : [];\r\n\r\n    const generatorsNamesParsed = generatorsNamesStore.map((name) => parseName(name)).sort();\r\n    const filtersNamesParsed = filtersNamesStore.map((name) => parseName(name)).sort();\r\n    const metricsNamesParsed = metricsNamesStore.map((name) => parseName(name)).sort();\r\n\r\n    generatorsNamesParsed.unshift(\"Upload Image\");\r\n\r\n    const handleClick = (text) => {        \r\n        // Switch/Case block checks to see which module is chosen and opens the <Collapse /> component by calling setOpenGenerators(), setOpenFilters(), and setOpenMetrics()\r\n        // This block also calls setRenderPage() to render the correct page from the router (\"/\", \"/about\", \"/contact\")\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setOpenGenerators(!openGenerators);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setOpenFilters(!openFilters);\r\n                setRenderPage(\"\");\r\n                break; \r\n            case \"Metrics\":\r\n                setOpenMetrics(!openMetrics);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"About\":\r\n                setRenderPage(\"about\");\r\n                break;\r\n            case \"Contact\":\r\n                setRenderPage(\"contact\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        // chosenModule state records which module (generators, filters, etc.) is chosen by the user.\r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    };\r\n\r\n    const handleFunctionClick = (text, chosenFunc) => {\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setChosenGenerator(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setChosenFilter(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Metrics\":\r\n                setChosenMetric(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    }\r\n\r\n    const renderSubMenus = (text, modules) => (\r\n        modules.map((g) => (\r\n            <ListItem \r\n                button\r\n                className={classes.nested} \r\n                onClick={() => handleFunctionClick(text, g)} \r\n                component={Link}\r\n                to={`/`}\r\n            >\r\n                <ListItemText primary={g} />\r\n            </ListItem>\r\n        ))\r\n    )\r\n\r\n    const generatedImages = useSelector((state) => (state.generatedImages));\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            PoreSpy\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <BrowserRouter>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true\r\n                        }}\r\n                    >\r\n                        <Toolbar />\r\n                        <div className={classes.drawerContainer}>\r\n                            <List\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                className={classes.root}\r\n                            >\r\n                                {\r\n                                    porespyModules.map((text) => (                                        \r\n                                        <div>\r\n                                            <ListItem \r\n                                                button \r\n                                                key={text} \r\n                                                component={Link} \r\n                                                to={text === \"About\" || text === \"Contact\" ? `/${text.toLowerCase()}` : `/`} \r\n                                                onClick={() => handleClick(text)}\r\n                                            >\r\n                                                <ListItemText primary={text} />\r\n                                                {(text !== \"About\" && text !== \"Contact\") && <KeyboardArrowDownIcon />}\r\n                                            </ListItem>\r\n                                            <Collapse \r\n                                                in={((text === \"Generators\" && openGenerators) || (text === \"Filters\" && openFilters) || (text === \"Metrics\" && openMetrics))} \r\n                                                timeout=\"auto\" \r\n                                                unmountOnExit\r\n                                            >\r\n                                                <List component=\"div\" disablePadding>\r\n                                                    {(text === \"Generators\") && renderSubMenus(text, generatorsNamesParsed)}\r\n                                                    {(text === \"Filters\") && renderSubMenus(text, filtersNamesParsed)}\r\n                                                    {(text === \"Metrics\") && renderSubMenus(text, metricsNamesParsed)}\r\n                                                </List>\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </div>\r\n                    </Drawer>\r\n\r\n                    <main className={classes.contentOuter}>\r\n                        <div className={classes.content}>\r\n                            <Toolbar />\r\n                            <div className=\"title\">\r\n                                PoreSpy\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                Porous Media Image Analysis in Python\r\n                            </div>\r\n\r\n                            {/* The following 3 conditional render statements and the <switch></switch> element display the components based on which boolean is true */}\r\n                            {/* Rendering of the <AboutPage /> and <ContactPage /> is in the <switch></switch> element to preserve the routing (\"/about\", \"/contact\") */}\r\n                            { chosenModule === \"Generators\" && renderPage === \"\" && <RenderGenerator chosenFunction={chosenGenerator} />}\r\n                            { chosenModule === \"Filters\" && renderPage === \"\" && <RenderFilter chosenFunction={chosenFilter} /> }\r\n                            { chosenModule === \"Metrics\" && renderPage === \"\" && <RenderMetric chosenFunction={chosenMetric} /> }                        \r\n                            <Switch>\r\n                                <Route path=\"/about\" render={() => <AboutPage />} />\r\n                                <Route path=\"/contact\" render={() => <ContactPage />} />\r\n                            </Switch>    \r\n                        </div>\r\n\r\n                        <GridList cellHeight={180} className={classes.gridList}>\r\n                            {\r\n                                generatedImages.map((tile, index) => (\r\n                                    <GridListTile cols={2} key={tile.img}>\r\n                                        <img \r\n                                            src={`data:image/png;base64,${tile.img}`}\r\n                                            alt={index} \r\n                                        />\r\n                                        <GridListTileBar\r\n                                            title={`Image ${index}`}\r\n                                            subtitle={<span>text here!</span>}\r\n                                            actionIcon={\r\n                                                <IconButton aria-label={`info about ${index}`} className={classes.icon}>\r\n                                                <InfoIcon />\r\n                                                </IconButton>\r\n                                            }\r\n                                        />\r\n                                    </GridListTile>\r\n                                ))\r\n                            }\r\n                        </GridList>\r\n                    </main>\r\n                </BrowserRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(undefined, undefined)(LandingPage);\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["142"],"//\r\n//  LocalThickness.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport './LocalThickness.css';\r\n\r\nconst LocalThickness = () => {\r\n    // https://github.com/PMEAL/porespy/blob/dev/porespy/filters/__funcs__.py\r\n    // These are filters that have \"im\" as a parameter and remaining parameters have default values.\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Hello from Local Thickness Component\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalThickness;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",["143","144","145"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\parseModuleNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":35,"nodeType":"152","messageId":"153","endLine":7,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":31,"column":8,"nodeType":"156","endLine":31,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":70,"column":5,"nodeType":"160","messageId":"161","endLine":70,"endColumn":9},{"ruleId":"150","severity":1,"message":"162","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":13},{"ruleId":"150","severity":1,"message":"163","line":6,"column":27,"nodeType":"152","messageId":"153","endLine":6,"endColumn":36},{"ruleId":"150","severity":1,"message":"164","line":91,"column":11,"nodeType":"152","messageId":"153","endLine":91,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":160,"column":21,"nodeType":"167","endLine":163,"endColumn":23},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["170"],"no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'axios' is defined but never used.","'useEffect' is defined but never used.","'downloadBundleOfTubes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [props]",{"range":"173","text":"174"},[1061,1063],"[props]"]