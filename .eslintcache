[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js":"22","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js":"23","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js":"24","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js":"25","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js":"26","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js":"27","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js":"28","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js":"29","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js":"30","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js":"31","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js":"32","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js":"33","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\moduleNames.js":"34","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Filters\\ImageToBeFiltered.js":"35","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Filters\\ImageToBeFiltered.js":"36","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderImage\\RenderImage.js":"37"},{"size":524,"mtime":1611956950703,"results":"38","hashOfConfig":"39"},{"size":2832,"mtime":1613753838815,"results":"40","hashOfConfig":"39"},{"size":13872,"mtime":1614984274729,"results":"41","hashOfConfig":"39"},{"size":4145,"mtime":1613449558250,"results":"42","hashOfConfig":"39"},{"size":9699,"mtime":1615823007999,"results":"43","hashOfConfig":"39"},{"size":3845,"mtime":1615823574960,"results":"44","hashOfConfig":"39"},{"size":581,"mtime":1613360916524,"results":"45","hashOfConfig":"39"},{"size":2186,"mtime":1612817969761,"results":"46","hashOfConfig":"39"},{"size":501,"mtime":1615823398431,"results":"47","hashOfConfig":"39"},{"size":400,"mtime":1610816628168,"results":"48","hashOfConfig":"39"},{"size":7529,"mtime":1615823069213,"results":"49","hashOfConfig":"39"},{"size":339,"mtime":1610816736278,"results":"50","hashOfConfig":"39"},{"size":343,"mtime":1610816760934,"results":"51","hashOfConfig":"39"},{"size":309,"mtime":1610816784410,"results":"52","hashOfConfig":"39"},{"size":263,"mtime":1610816772830,"results":"53","hashOfConfig":"39"},{"size":304,"mtime":1610816747508,"results":"54","hashOfConfig":"39"},{"size":304,"mtime":1610816681137,"results":"55","hashOfConfig":"39"},{"size":293,"mtime":1610816669691,"results":"56","hashOfConfig":"39"},{"size":319,"mtime":1610816711276,"results":"57","hashOfConfig":"39"},{"size":304,"mtime":1610816723806,"results":"58","hashOfConfig":"39"},{"size":383,"mtime":1612055669142,"results":"59","hashOfConfig":"39"},{"size":321,"mtime":1613784247564,"results":"60","hashOfConfig":"39"},{"size":921,"mtime":1614985633355,"results":"61","hashOfConfig":"39"},{"size":667,"mtime":1612055194777,"results":"62","hashOfConfig":"39"},{"size":369,"mtime":1612055693927,"results":"63","hashOfConfig":"39"},{"size":339,"mtime":1613783827026,"results":"64","hashOfConfig":"39"},{"size":279,"mtime":1612111829563,"results":"65","hashOfConfig":"39"},{"size":1418,"mtime":1614630482818,"results":"66","hashOfConfig":"39"},{"size":786,"mtime":1614626831822,"results":"67","hashOfConfig":"39"},{"size":471,"mtime":1613186483445,"results":"68","hashOfConfig":"39"},{"size":536,"mtime":1614984713073,"results":"69","hashOfConfig":"39"},{"size":529,"mtime":1614984698931,"results":"70","hashOfConfig":"39"},{"size":3503,"mtime":1614985630803,"results":"71","hashOfConfig":"39"},{"size":358,"mtime":1613750572874,"results":"72","hashOfConfig":"39"},{"size":336,"mtime":1614985997623,"results":"73","hashOfConfig":"39"},{"size":298,"mtime":1614985565444,"results":"74","hashOfConfig":"39"},{"size":1229,"mtime":1615823519702,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"qlwrk8",{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["160","161"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["162","163"],"//\r\n//  PoreSpyApp.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { startSetPorespyFuncs } from '../../actions/porespyfuncs';\r\nimport { startSetBackendEndpoint } from '../../actions/backend';\r\n// import { startSetStyles } from '../../actions/styles';\r\n// import { classes } from '../../utils/styles';\r\nimport LandingPage from '../LandingPage/LandingPage';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n\r\nlet porespyFuncs = {};\r\nlet backendRootEndpoint = \"http://localhost:8000/\";\r\nlet backendInterval;\r\n// let classesRedux = classes;\r\n\r\nconst PoreSpyApp = (props) => {\r\n    // props.startSetStyles(classes);\r\n\r\n    useEffect(() => {\r\n        backendInterval = setInterval(() => {\r\n            if (Object.keys(porespyFuncs).length === 0 && porespyFuncs.constructor === Object) {\r\n                getPoreSpyFuncs();\r\n            }            \r\n        }, 1000) \r\n    });\r\n\r\n    const getPoreSpyFuncs = () => {\r\n        axios.get(`${backendRootEndpoint}porespyfuncs/1/`)\r\n            .then(({ data: { porespy_funcs } }) => {\r\n                porespyFuncs = porespy_funcs;\r\n                props.startSetPorespyFuncs(porespy_funcs);\r\n                props.startSetBackendEndpoint(backendRootEndpoint);\r\n            }).catch(() => {\r\n                getPoreSpyFuncs();\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router basename=\"\">\r\n                <Switch>                \r\n                    {/* Render LandingPage component with page prop passed in. */}\r\n                    {/* page prop will depend on how the user reaches the site (ex: localhost:3000/about vs localhost:3000/contact vs localhost:3000/) */}\r\n                    <Route path=\"/\" exact render={() => (\r\n                        <LandingPage page=\"\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/about\" render={() => (\r\n                        <LandingPage page=\"about\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/contact\" render={() => (\r\n                        <LandingPage page=\"contact\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"*\" component={NotFoundPage} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startSetPorespyFuncs: () => dispatch(startSetPorespyFuncs(porespyFuncs)),\r\n    startSetBackendEndpoint: () => dispatch(startSetBackendEndpoint(backendRootEndpoint))\r\n    // startSetStyles: () => dispatch(startSetStyles(classes))\r\n})\r\n\r\nexport default connect(undefined, mapDispatchToProps)(PoreSpyApp);\r\n",["164","165"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["166","167","168"],"//\r\n//  LandingPage.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Switch, Route, Link, BrowserRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport ImagePanel from '../ImagePanel/ImagePanel';\r\n\r\nimport AboutPage from '../AboutPage/AboutPage';\r\nimport ContactPage from '../ContactPage/ContactPage';\r\nimport RenderGenerator from '../RenderGenerator/RenderGenerator';\r\nimport RenderFilter from '../RenderFilter/RenderFilter';\r\nimport RenderMetric from '../RenderMetric/RenderMetric';\r\nimport { parseName } from '../../utils/moduleNames';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = (props) => {\r\n    const [openGenerators, setOpenGenerators] = useState(false);\r\n    const [openFilters, setOpenFilters] = useState(false);\r\n    const [openMetrics, setOpenMetrics] = useState(false);\r\n    \r\n    const [openIO, setOpenIO] = useState(false);\r\n    const [openNetworks, setOpenNetworks] = useState(false);\r\n\r\n    const [chosenModule, setChosenModule] = useState(\"Generators\");\r\n    const [chosenGenerator, setChosenGenerator] = useState(\"\");\r\n    const [chosenFilter, setChosenFilter] = useState(\"Apply Chords\");\r\n    const [chosenMetric, setChosenMetric] = useState(\"Chord Counts\");\r\n\r\n    const [chosenIO, setChosenIO] = useState(\"\");\r\n    const [chosenNetwork, setChosenNetwork] = useState(\"\"); // should a default to the chosenNetwork state variable.\r\n\r\n    const [renderPage, setRenderPage] = useState(props.page);\r\n    \r\n    // porespyModules contains the menu names that are then called with .map() to create on the UI.\r\n    const porespyModules = ['Generators', 'Filters', 'Metrics', 'Networks', 'IO', 'About', 'Contact'];\r\n    const funcs = useSelector((state) => (state));\r\n    const generatorsNamesStore = funcs.porespyFuncs.hasOwnProperty('generators') ? Object.keys(funcs.porespyFuncs.generators) : [];\r\n    const filtersNamesStore = funcs.porespyFuncs.hasOwnProperty('filters') ? Object.keys(funcs.porespyFuncs.filters) : [];\r\n    const metricsNamesStore = funcs.porespyFuncs.hasOwnProperty('metrics') ? Object.keys(funcs.porespyFuncs.metrics) : [];\r\n    const ioNamesStore = funcs.porespyFuncs.hasOwnProperty('io') ? Object.keys(funcs.porespyFuncs.io) : [];\r\n\r\n\r\n    // const networksNamesStore = funcs.porespyFuncs.hasOwnProperty('io') ? Object.keys(funcs.porespyFuncs.io) : [];\r\n    const networksNamesStore = [\"placeholder 1\", \"placeholder 2\"]\r\n\r\n\r\n\r\n    const generatorsNamesParsed = generatorsNamesStore.map((n) => parseName(n)).sort();\r\n    const filtersNamesParsed = filtersNamesStore.map((n) => parseName(n)).sort();\r\n    const metricsNamesParsed = metricsNamesStore.map((n) => parseName(n)).sort();\r\n    const ioNamesParsed = ioNamesStore.map((n) => parseName(n)).sort();\r\n    const networksNamesParsed = networksNamesStore.map((n) => parseName(n)).sort();\r\n\r\n    generatorsNamesParsed.unshift(\"Upload Image\");\r\n\r\n    const handleClick = (text) => {        \r\n        // Switch/Case block checks to see which module is chosen and opens the <Collapse /> component by calling setOpenGenerators(), setOpenFilters(), and setOpenMetrics()\r\n        // This block also calls setRenderPage() to render the correct page from the router (\"/\", \"/about\", \"/contact\")\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setOpenGenerators(!openGenerators);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setOpenFilters(!openFilters);\r\n                setRenderPage(\"\");\r\n                break; \r\n            case \"Metrics\":\r\n                setOpenMetrics(!openMetrics);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"IO\":\r\n                setOpenIO(!openIO);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Networks\":\r\n                setOpenNetworks(!openNetworks);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"About\":\r\n                setRenderPage(\"about\");\r\n                break;\r\n            case \"Contact\":\r\n                setRenderPage(\"contact\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    };\r\n\r\n    const handleFunctionClick = (text, chosenFunc) => {\r\n        switch (text) {\r\n            case \"Generators\":\r\n                setChosenGenerator(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Filters\":\r\n                setChosenFilter(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Metrics\":\r\n                setChosenMetric(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"IO\":\r\n                setChosenIO(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            case \"Networks\":\r\n                setChosenNetwork(chosenFunc);\r\n                setRenderPage(\"\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (text) {\r\n            setChosenModule(text);\r\n        }\r\n    }\r\n\r\n    const renderSubMenus = (text, modules) => {\r\n        // console.log(text, modules);\r\n        return modules.map((g) => (\r\n            <ListItem \r\n                button\r\n                className={classes.nested} \r\n                onClick={() => handleFunctionClick(text, g)} \r\n                component={Link}\r\n                to={`/`}\r\n            >\r\n                <ListItemText primary={g} />\r\n            </ListItem>\r\n        ))\r\n        }\r\n\r\n    // // TODO: add this object to redux to clean this file up?\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        drawer: {\r\n            width: 240,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: 240\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto',\r\n        },\r\n        content: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            flexGrow: 1,\r\n            width: '100%',\r\n        },\r\n        contentOuter: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            paddingLeft: 240,\r\n            width: '100%',\r\n        },\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4)\r\n        },\r\n        collapseMenu: {\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n        }, \r\n        gridList: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            maxWidth: 160,\r\n            minHeight: '95%',\r\n            minWidth: 200,\r\n            position: 'absolute',\r\n            right: 2,\r\n            top: 64\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n        imageBarButtons: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            PoreSpy\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <BrowserRouter>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true\r\n                        }}\r\n                    >\r\n                        <Toolbar />\r\n                        <div className={classes.drawerContainer}>\r\n                            <List\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                className={classes.root}\r\n                            >\r\n                                {\r\n                                    porespyModules.map((text) => (                                        \r\n                                        <div>\r\n                                            <ListItem \r\n                                                button \r\n                                                key={text} \r\n                                                component={Link} \r\n                                                to={text === \"About\" || text === \"Contact\" ? `/${text.toLowerCase()}` : `/`} \r\n                                                onClick={() => handleClick(text)}\r\n                                            >\r\n                                                <ListItemText primary={text} />\r\n                                                {(text !== \"About\" && text !== \"Contact\") && <KeyboardArrowDownIcon />}\r\n                                            </ListItem>\r\n                                            <Collapse \r\n                                                in={(\r\n                                                    (text === \"Generators\" && openGenerators) \r\n                                                    || (text === \"Filters\" && openFilters) \r\n                                                    || (text === \"Metrics\" && openMetrics) \r\n                                                    || (text === \"IO\" && openIO)\r\n                                                    || (text === \"Networks\" && openNetworks)\r\n                                                )} \r\n                                                timeout=\"auto\" \r\n                                                unmountOnExit\r\n                                            >\r\n                                                <List component=\"div\" disablePadding>\r\n                                                    {(text === \"Generators\") && renderSubMenus(text, generatorsNamesParsed)}\r\n                                                    {(text === \"Filters\") && renderSubMenus(text, filtersNamesParsed)}\r\n                                                    {(text === \"Metrics\") && renderSubMenus(text, metricsNamesParsed)}\r\n                                                    {(text === \"IO\") && renderSubMenus(text, ioNamesParsed)}\r\n                                                    {(text === \"Networks\") && renderSubMenus(text, networksNamesParsed)}\r\n                                                </List>\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                            <Divider />\r\n                        </div>\r\n                    </Drawer>\r\n\r\n                    <main className={classes.contentOuter}>\r\n                        <div className={classes.content}>\r\n                            <Toolbar />\r\n                            <div className=\"title\">\r\n                                PoreSpy\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                Porous Media Image Analysis in Python\r\n                            </div>\r\n                            { chosenModule === \"Generators\" && renderPage === \"\" && <RenderGenerator chosenFunction={chosenGenerator} />}\r\n                            { chosenModule === \"Filters\" && renderPage === \"\" && <RenderFilter chosenFunction={chosenFilter} /> }\r\n                            { chosenModule === \"Metrics\" && renderPage === \"\" && <RenderMetric chosenFunction={chosenMetric} /> }\r\n\r\n\r\n                            {/* \r\n\r\n                                // TODO: Ask if we need to render any of the IO's???                            \r\n                                chosenModule === \"IO\" && renderPage === \"\" && <RenderMetric chosenFunction={chosenIO} /> \r\n                        \r\n                            */}\r\n\r\n\r\n                            {/*\r\n                                // TODO: Create a RenderNetwork component in the same vein as RenderGenerator\r\n                                chosenModule === \"Networks\" && renderPage === \"\" && <RenderMetric chosenFunction={chosenNetwork} /> \r\n                            */}\r\n                            <Switch>\r\n                                <Route path=\"/about\" render={() => <AboutPage />} />\r\n                                <Route path=\"/contact\" render={() => <ContactPage />} />\r\n                            </Switch>    \r\n                        </div>\r\n                        <ImagePanel classes={classes}/>\r\n                    </main>\r\n                </BrowserRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(undefined, undefined)(LandingPage);\r\n",["169","170"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["171","172"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",["173","174"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],["175","176"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],["177","178"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],["179","180"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js",[],["181","182"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js",[],["183","184"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\moduleNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Filters\\ImageToBeFiltered.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Filters\\ImageToBeFiltered.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderImage\\RenderImage.js",["185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":7,"column":35,"nodeType":"192","messageId":"193","endLine":7,"endColumn":43},{"ruleId":"190","severity":1,"message":"194","line":26,"column":9,"nodeType":"192","messageId":"193","endLine":26,"endColumn":24},{"ruleId":"186","replacedBy":"195"},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","severity":1,"message":"197","line":44,"column":12,"nodeType":"192","messageId":"193","endLine":44,"endColumn":20},{"ruleId":"190","severity":1,"message":"198","line":45,"column":12,"nodeType":"192","messageId":"193","endLine":45,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":188,"column":9,"nodeType":"201","messageId":"202","endLine":188,"endColumn":13},{"ruleId":"186","replacedBy":"203"},{"ruleId":"188","replacedBy":"204"},{"ruleId":"190","severity":1,"message":"205","line":6,"column":27,"nodeType":"192","messageId":"193","endLine":6,"endColumn":36},{"ruleId":"190","severity":1,"message":"206","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":24},{"ruleId":"190","severity":1,"message":"205","line":6,"column":27,"nodeType":"192","messageId":"193","endLine":6,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":158,"column":21,"nodeType":"209","endLine":161,"endColumn":23},{"ruleId":"186","replacedBy":"210"},{"ruleId":"188","replacedBy":"211"},{"ruleId":"186","replacedBy":"212"},{"ruleId":"188","replacedBy":"213"},{"ruleId":"186","replacedBy":"214"},{"ruleId":"188","replacedBy":"215"},{"ruleId":"186","replacedBy":"216"},{"ruleId":"188","replacedBy":"217"},{"ruleId":"186","replacedBy":"218"},{"ruleId":"188","replacedBy":"219"},{"ruleId":"207","severity":1,"message":"208","line":16,"column":21,"nodeType":"209","endLine":19,"endColumn":23},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'backendInterval' is assigned a value but never used.",["220"],["221"],"'chosenIO' is assigned a value but never used.","'chosenNetwork' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected",["220"],["221"],"'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],["220"],["221"],"no-global-assign","no-unsafe-negation"]