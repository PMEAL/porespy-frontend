[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js":"22","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js":"23","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js":"24","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js":"25","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js":"26","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js":"27","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js":"28","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js":"29","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js":"30","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js":"31","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js":"32","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js":"33"},{"size":524,"mtime":1611956950703,"results":"34","hashOfConfig":"35"},{"size":2586,"mtime":1613750462796,"results":"36","hashOfConfig":"35"},{"size":11638,"mtime":1613752640799,"results":"37","hashOfConfig":"35"},{"size":4145,"mtime":1613449558250,"results":"38","hashOfConfig":"35"},{"size":10537,"mtime":1613751637570,"results":"39","hashOfConfig":"35"},{"size":540,"mtime":1610300242699,"results":"40","hashOfConfig":"35"},{"size":581,"mtime":1613360916524,"results":"41","hashOfConfig":"35"},{"size":2186,"mtime":1612817969761,"results":"42","hashOfConfig":"35"},{"size":577,"mtime":1610816574601,"results":"43","hashOfConfig":"35"},{"size":400,"mtime":1610816628168,"results":"44","hashOfConfig":"35"},{"size":7511,"mtime":1613446949660,"results":"45","hashOfConfig":"35"},{"size":339,"mtime":1610816736278,"results":"46","hashOfConfig":"35"},{"size":343,"mtime":1610816760934,"results":"47","hashOfConfig":"35"},{"size":309,"mtime":1610816784410,"results":"48","hashOfConfig":"35"},{"size":263,"mtime":1610816772830,"results":"49","hashOfConfig":"35"},{"size":304,"mtime":1610816747508,"results":"50","hashOfConfig":"35"},{"size":304,"mtime":1610816681137,"results":"51","hashOfConfig":"35"},{"size":293,"mtime":1610816669691,"results":"52","hashOfConfig":"35"},{"size":319,"mtime":1610816711276,"results":"53","hashOfConfig":"35"},{"size":304,"mtime":1610816723806,"results":"54","hashOfConfig":"35"},{"size":383,"mtime":1612055669142,"results":"55","hashOfConfig":"35"},{"size":373,"mtime":1612055639711,"results":"56","hashOfConfig":"35"},{"size":806,"mtime":1613343151480,"results":"57","hashOfConfig":"35"},{"size":667,"mtime":1612055194777,"results":"58","hashOfConfig":"35"},{"size":369,"mtime":1612055693927,"results":"59","hashOfConfig":"35"},{"size":395,"mtime":1612055620330,"results":"60","hashOfConfig":"35"},{"size":279,"mtime":1612111829563,"results":"61","hashOfConfig":"35"},{"size":1418,"mtime":1612815137654,"results":"62","hashOfConfig":"35"},{"size":771,"mtime":1613751178855,"results":"63","hashOfConfig":"35"},{"size":471,"mtime":1613186483445,"results":"64","hashOfConfig":"35"},{"size":410,"mtime":1613343093881,"results":"65","hashOfConfig":"35"},{"size":308,"mtime":1613342964346,"results":"66","hashOfConfig":"35"},{"size":3944,"mtime":1613752706309,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"qlwrk8",{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["141","142"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["143","144"],"//\r\n//  PoreSpyApp.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { startSetPorespyFuncs } from '../../actions/porespyfuncs';\r\nimport { startSetBackendEndpoint } from '../../actions/backend';\r\nimport LandingPage from '../LandingPage/LandingPage';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n\r\nlet porespyFuncs = {};\r\nlet backendRootEndpoint = \"http://localhost:8000/\";\r\nlet backendInterval;\r\n\r\nconst PoreSpyApp = (props) => {\r\n    useEffect(() => {\r\n        backendInterval = setInterval(() => {\r\n            if (Object.keys(porespyFuncs).length === 0 && porespyFuncs.constructor === Object) {\r\n                getPoreSpyFuncs();\r\n            }            \r\n        }, 1000) \r\n    });\r\n\r\n    const getPoreSpyFuncs = () => {\r\n        axios.get(`${backendRootEndpoint}porespyfuncs/1/`)\r\n            .then(({ data: { porespy_funcs } }) => {\r\n                porespyFuncs = porespy_funcs;\r\n                props.startSetPorespyFuncs(porespy_funcs);\r\n                props.startSetBackendEndpoint(backendRootEndpoint);\r\n            }).catch(() => {\r\n                getPoreSpyFuncs();\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router basename=\"\">\r\n                <Switch>                \r\n                    {/* Render LandingPage component with page prop passed in. */}\r\n                    {/* page prop will depend on how the user reaches the site (ex: localhost:3000/about vs localhost:3000/contact vs localhost:3000/) */}\r\n                    <Route path=\"/\" exact render={() => (\r\n                        <LandingPage page=\"\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/about\" render={() => (\r\n                        <LandingPage page=\"about\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/contact\" render={() => (\r\n                        <LandingPage page=\"contact\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"*\" component={NotFoundPage} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startSetPorespyFuncs: () => dispatch(startSetPorespyFuncs(porespyFuncs)),\r\n    startSetBackendEndpoint: () => dispatch(startSetBackendEndpoint(backendRootEndpoint))\r\n})\r\n\r\nexport default connect(undefined, mapDispatchToProps)(PoreSpyApp);\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["145","146"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],["147","148"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",["149"],"//\r\n//  LocalThickness.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport './LocalThickness.css';\r\n\r\nconst LocalThickness = () => {\r\n    // https://github.com/PMEAL/porespy/blob/dev/porespy/filters/__funcs__.py\r\n    // These are filters that have \"im\" as a parameter and remaining parameters have default values.\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Hello from Local Thickness Component\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalThickness;\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",["150","151","152"],"//\r\n//  BundleOfTubes.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport { integerOnlyField, floatOnlyBetweenOneAndZeroField, validateParams } from '../../../utils/fieldValidators';\r\nimport { startSetImages } from '../../../actions/Generators/GeneratedImages';\r\nimport './BundleOfTubes.css';\r\n\r\n\r\n// TODO: Add bundle of tubes images to the redux store, and the right panel.\r\nlet genImagesRedux = {};\r\n\r\nconst BundleOfTubes = (props) => {    \r\n    const backendEndpoint = useSelector((state) => state.backend);\r\n    const funcs = useSelector((state) => (state));\r\n    const fieldsInfo = funcs.porespyFuncs.hasOwnProperty('generators') ? funcs.porespyFuncs.generators.bundle_of_tubes : {};\r\n    \r\n    \r\n    if (fieldsInfo.hasOwnProperty('kwargs')) {\r\n        // remove kwargs from this function. As a result, no kwargs entry in the component will be generated.\r\n        delete fieldsInfo['kwargs'];\r\n    }\r\n\r\n    for (const entry in fieldsInfo) {\r\n        if (fieldsInfo[entry].type === \"int\") {\r\n            fieldsInfo[entry][\"helperText\"] = \"Integer Values only\";\r\n        } else if (fieldsInfo[entry].type === \"float\") {\r\n            fieldsInfo[entry][\"helperText\"] = \"Float value between 0 and 1\";\r\n        }\r\n\r\n        fieldsInfo[entry][\"id\"] = entry + \"input\";\r\n\r\n        switch (entry) {\r\n            case \"shape[0]\":\r\n                fieldsInfo[entry][\"label\"] = \"Voxels in x Dimension\";\r\n                break;\r\n            case \"shape[1]\":\r\n                fieldsInfo[entry][\"label\"] = \"Voxels in y Dimension\";\r\n                break;\r\n            case \"shape[2]\":\r\n                fieldsInfo[entry][\"label\"] = \"Voxels in z Dimension\";\r\n                break;\r\n            case \"spacing\":\r\n                fieldsInfo[entry][\"label\"] = \"Spacing\";\r\n                // NOTE: In Porespy documentation, there is no mention that the spacing parameter must be specified. In the code it is required as it is used in calculations.\r\n                fieldsInfo[entry][\"required\"] = true\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const [params, setParams] = useState(fieldsInfo);\r\n    const [validatedParams, setValidatedParams] = useState(true);\r\n    const [bundleOfTubes, setBundleOfTubes] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const generateBundleOfTubes = () => {\r\n        setLoading(true);\r\n        setBundleOfTubes(\"\");\r\n        setTimeout(() => {\r\n            axios.put(`${backendEndpoint}generators/bundleoftubes/1/`, {\r\n                dimension_x: params[\"shape[0]\"].value,\r\n                dimension_y: params[\"shape[1]\"].value,\r\n                dimension_z: params[\"shape[2]\"].value !== \"\" ? params[\"shape[2]\"].value : 0,\r\n                spacing: parseInt(params[\"spacing\"].value, 10)\r\n            }).then(({ data: { generated_image } }) => {\r\n                setBundleOfTubes(generated_image);\r\n                genImagesRedux = {\r\n                    img: generated_image\r\n                }\r\n                props.startSetImages(generated_image);\r\n                setLoading(false);\r\n            }).catch((e) => {\r\n                setBundleOfTubes(\"\");\r\n                setLoading(false);\r\n                setError(true);\r\n                setErrorMessage(`Something is wrong... ${e.message}`);\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    const downloadBundleOfTubes = () => {\r\n        console.log(\"hello from downloadBundleOfTubes()\");\r\n    }\r\n\r\n    const parseEnteredValues = (e, property) => {\r\n        const tempParams = params;\r\n\r\n        switch (tempParams[property].type) {\r\n            case \"int\":\r\n                tempParams[property].value = integerOnlyField(e);\r\n                break;\r\n            case \"float\":\r\n                tempParams[property].value =  floatOnlyBetweenOneAndZeroField(e);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // TODO: maybe split this function to make it more scalable? ^^^\r\n        setParams(tempParams);\r\n        setValidatedParams(validateParams(params));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bundleOfTubesTitle\">\r\n                Bundle of Tubes\r\n            </div>\r\n            <div className=\"bundleOfTubesDescription\">\r\n                Creates a 3D image of a bundle of tubes, in the form of a rectangular plate with randomly sized holes through it.\r\n            </div>\r\n\r\n            <div className=\"bundleOfTubesTextFields\">\r\n                {\r\n                    // Dynamically creates <TextFields /> based on entries in the params object\r\n                    Object.keys(params).map((p) => (\r\n                        <div className=\"bundleOfTubesTextField\">\r\n                            <TextField \r\n                                required={params[p].required}\r\n                                id={params[p].id}\r\n                                label={params[p].label}\r\n                                defaultValue={params[p].value}\r\n                                helperText={params[p].helperText}\r\n                                variant={\"outlined\"}\r\n                                onInput={(e) => parseEnteredValues(e, p)}\r\n                            />\r\n                        </div>                        \r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"bundleOfTubesButton\">\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={() => generateBundleOfTubes()}\r\n                    disabled={validatedParams}\r\n                    style={{ minWidth: '170px', minHeight: '16px'}}\r\n                >\r\n                    Generate Image\r\n                </Button>\r\n            </div>\r\n\r\n            {\r\n                // TODO: maybe asbtract this? This is similar in Blobs.js component\r\n                bundleOfTubes !== \"\"\r\n                ?\r\n                <div className=\"bundleOfTubesImageWrapper\">\r\n                    <img\r\n                        className=\"bundleOfTubesImage\"\r\n                        src={`data:image/png;base64,${bundleOfTubes}`}\r\n                    />\r\n                </div>\r\n                :\r\n                (\r\n                    loading\r\n                    ?\r\n                    <div className=\"spinner\">\r\n                        <CircularProgress />\r\n                        <div>\r\n                            Generating your image...\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        {\r\n                            error\r\n                            &&\r\n                            <div className=\"bundleOfTubesImageWrapper\">\r\n                                {errorMessage}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startSetImages: () => dispatch(startSetImages(genImagesRedux))\r\n})\r\n\r\nexport default connect(undefined, mapDispatchToProps)(BundleOfTubes);\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js",[],["153","154"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\DefaultPage\\DefaultPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js",[],["155","156"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":7,"column":35,"nodeType":"164","messageId":"165","endLine":7,"endColumn":43},{"ruleId":"162","severity":1,"message":"166","line":21,"column":9,"nodeType":"164","messageId":"165","endLine":21,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":64,"column":5,"nodeType":"169","messageId":"170","endLine":64,"endColumn":9},{"ruleId":"162","severity":1,"message":"171","line":184,"column":11,"nodeType":"164","messageId":"165","endLine":184,"endColumn":26},{"ruleId":"158","replacedBy":"172"},{"ruleId":"160","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":6,"column":27,"nodeType":"164","messageId":"165","endLine":6,"endColumn":36},{"ruleId":"162","severity":1,"message":"176","line":92,"column":11,"nodeType":"164","messageId":"165","endLine":92,"endColumn":32},{"ruleId":"177","severity":1,"message":"178","line":159,"column":21,"nodeType":"179","endLine":162,"endColumn":23},{"ruleId":"158","replacedBy":"180"},{"ruleId":"160","replacedBy":"181"},{"ruleId":"158","replacedBy":"182"},{"ruleId":"160","replacedBy":"183"},{"ruleId":"167","severity":1,"message":"168","line":51,"column":9,"nodeType":"169","messageId":"170","endLine":51,"endColumn":13},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'backendInterval' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'generatedImages' is assigned a value but never used.",["184"],["185"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'downloadBundleOfTubes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["184"],["185"],["184"],["185"],"no-global-assign","no-unsafe-negation"]