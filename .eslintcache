[{"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js":"1","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js":"2","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js":"3","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js":"4","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js":"5","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js":"6","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js":"7","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js":"8","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js":"9","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js":"10","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js":"11","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js":"12","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js":"13","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js":"14","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js":"15","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js":"16","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js":"17","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js":"18","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js":"19","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js":"20","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js":"21","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js":"22","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js":"23","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js":"24","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js":"25","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js":"26","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js":"27","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js":"28","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js":"29","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js":"30","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js":"31","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js":"32","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\moduleNames.js":"33","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Filters\\ImageToBeFiltered.js":"34","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Filters\\ImageToBeFiltered.js":"35","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderImage\\RenderImage.js":"36","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Metrics\\PoreSizeDistribution\\PoreSizeDistribution.js":"37","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyChords\\ApplyChords.js":"38","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyChords3D\\ApplyChords3D.js":"39","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyPadded\\ApplyPadded.js":"40","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ChunkedFunc\\ChunkedFunc.js":"41","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\DistanceTransformLin\\DistanceTransformLin.js":"42","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\Fftmorphology\\Fftmorphology.js":"43","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FillBlindPores\\FillBlindPores.js":"44","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindDisconnectedVoxels\\FindDisconnectedVoxels.js":"45","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindDtArtifacts\\FindDtArtifacts.js":"46","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\Flood\\Flood.js":"47","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindPeaks\\FindPeaks.js":"48","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\HoldPeaks\\HoldPeaks.js":"49","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\PruneBranches\\PruneBranches.js":"50","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ReducePeaks\\ReducePeaks.js":"51","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\NphaseBorder\\NphaseBorder.js":"52","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\SnowPartitioningN\\SnowPartitioningN.js":"53","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimDisconnectedBlobs\\TrimDisconnectedBlobs.js":"54","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimNonpercolatingPaths\\TrimNonpercolatingPaths.js":"55","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\RegionSize\\RegionSize.js":"56","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimSaddlePoints\\TrimSaddlePoints.js":"57","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\SnowPartitioning\\SnowPartitioning.js":"58","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimExtrema\\TrimExtrema.js":"59","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimNearbyPeaks\\TrimNearbyPeaks.js":"60"},{"size":524,"mtime":1611956950703,"results":"61","hashOfConfig":"62"},{"size":2832,"mtime":1613753838815,"results":"63","hashOfConfig":"62"},{"size":13993,"mtime":1615939591965,"results":"64","hashOfConfig":"62"},{"size":4145,"mtime":1613449558250,"results":"65","hashOfConfig":"62"},{"size":8127,"mtime":1616165788668,"results":"66","hashOfConfig":"62"},{"size":8981,"mtime":1616165010822,"results":"67","hashOfConfig":"62"},{"size":581,"mtime":1613360916524,"results":"68","hashOfConfig":"62"},{"size":2402,"mtime":1615939109058,"results":"69","hashOfConfig":"62"},{"size":4965,"mtime":1615939666049,"results":"70","hashOfConfig":"62"},{"size":2558,"mtime":1616125826537,"results":"71","hashOfConfig":"62"},{"size":6639,"mtime":1615830585024,"results":"72","hashOfConfig":"62"},{"size":339,"mtime":1610816736278,"results":"73","hashOfConfig":"62"},{"size":343,"mtime":1610816760934,"results":"74","hashOfConfig":"62"},{"size":309,"mtime":1610816784410,"results":"75","hashOfConfig":"62"},{"size":263,"mtime":1610816772830,"results":"76","hashOfConfig":"62"},{"size":304,"mtime":1610816747508,"results":"77","hashOfConfig":"62"},{"size":304,"mtime":1610816681137,"results":"78","hashOfConfig":"62"},{"size":293,"mtime":1610816669691,"results":"79","hashOfConfig":"62"},{"size":319,"mtime":1610816711276,"results":"80","hashOfConfig":"62"},{"size":304,"mtime":1610816723806,"results":"81","hashOfConfig":"62"},{"size":383,"mtime":1612055669142,"results":"82","hashOfConfig":"62"},{"size":321,"mtime":1613784247564,"results":"83","hashOfConfig":"62"},{"size":922,"mtime":1616125286665,"results":"84","hashOfConfig":"62"},{"size":369,"mtime":1612055693927,"results":"85","hashOfConfig":"62"},{"size":339,"mtime":1613783827026,"results":"86","hashOfConfig":"62"},{"size":279,"mtime":1612111829563,"results":"87","hashOfConfig":"62"},{"size":1418,"mtime":1614630482818,"results":"88","hashOfConfig":"62"},{"size":786,"mtime":1614626831822,"results":"89","hashOfConfig":"62"},{"size":471,"mtime":1613186483445,"results":"90","hashOfConfig":"62"},{"size":613,"mtime":1615934188361,"results":"91","hashOfConfig":"62"},{"size":529,"mtime":1614984698931,"results":"92","hashOfConfig":"62"},{"size":3504,"mtime":1616125281892,"results":"93","hashOfConfig":"62"},{"size":358,"mtime":1613750572874,"results":"94","hashOfConfig":"62"},{"size":346,"mtime":1616119170578,"results":"95","hashOfConfig":"62"},{"size":308,"mtime":1616119124234,"results":"96","hashOfConfig":"62"},{"size":1994,"mtime":1615835013253,"results":"97","hashOfConfig":"62"},{"size":9080,"mtime":1616168726594,"results":"98","hashOfConfig":"62"},{"size":489,"mtime":1615863891954,"results":"99","hashOfConfig":"62"},{"size":593,"mtime":1615859884288,"results":"100","hashOfConfig":"62"},{"size":492,"mtime":1615863905745,"results":"101","hashOfConfig":"62"},{"size":854,"mtime":1615863912142,"results":"102","hashOfConfig":"62"},{"size":516,"mtime":1615863920087,"results":"103","hashOfConfig":"62"},{"size":471,"mtime":1615863926665,"results":"104","hashOfConfig":"62"},{"size":433,"mtime":1615863937120,"results":"105","hashOfConfig":"62"},{"size":647,"mtime":1615863945993,"results":"106","hashOfConfig":"62"},{"size":750,"mtime":1615864502858,"results":"107","hashOfConfig":"62"},{"size":550,"mtime":1615864475560,"results":"108","hashOfConfig":"62"},{"size":386,"mtime":1615863964952,"results":"109","hashOfConfig":"62"},{"size":406,"mtime":1615864055519,"results":"110","hashOfConfig":"62"},{"size":413,"mtime":1615864789697,"results":"111","hashOfConfig":"62"},{"size":501,"mtime":1615864886878,"results":"112","hashOfConfig":"62"},{"size":520,"mtime":1615864417963,"results":"113","hashOfConfig":"62"},{"size":650,"mtime":1615865364232,"results":"114","hashOfConfig":"62"},{"size":463,"mtime":1615865626473,"results":"115","hashOfConfig":"62"},{"size":738,"mtime":1615866537642,"results":"116","hashOfConfig":"62"},{"size":406,"mtime":1615864981649,"results":"117","hashOfConfig":"62"},{"size":563,"mtime":1615866526123,"results":"118","hashOfConfig":"62"},{"size":828,"mtime":1615865184209,"results":"119","hashOfConfig":"62"},{"size":530,"mtime":1615865775311,"results":"120","hashOfConfig":"62"},{"size":515,"mtime":1615866182264,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"qlwrk8",{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\index.js",[],["251","252"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\PorespyApp\\PoreSpyApp.js",["253","254"],"//\r\n//  PoreSpyApp.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { startSetPorespyFuncs } from '../../actions/porespyfuncs';\r\nimport { startSetBackendEndpoint } from '../../actions/backend';\r\n// import { startSetStyles } from '../../actions/styles';\r\n// import { classes } from '../../utils/styles';\r\nimport LandingPage from '../LandingPage/LandingPage';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\n\r\nlet porespyFuncs = {};\r\nlet backendRootEndpoint = \"http://localhost:8000/\";\r\nlet backendInterval;\r\n// let classesRedux = classes;\r\n\r\nconst PoreSpyApp = (props) => {\r\n    // props.startSetStyles(classes);\r\n\r\n    useEffect(() => {\r\n        backendInterval = setInterval(() => {\r\n            if (Object.keys(porespyFuncs).length === 0 && porespyFuncs.constructor === Object) {\r\n                getPoreSpyFuncs();\r\n            }            \r\n        }, 1000) \r\n    });\r\n\r\n    const getPoreSpyFuncs = () => {\r\n        axios.get(`${backendRootEndpoint}porespyfuncs/1/`)\r\n            .then(({ data: { porespy_funcs } }) => {\r\n                porespyFuncs = porespy_funcs;\r\n                props.startSetPorespyFuncs(porespy_funcs);\r\n                props.startSetBackendEndpoint(backendRootEndpoint);\r\n            }).catch(() => {\r\n                getPoreSpyFuncs();\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router basename=\"\">\r\n                <Switch>                \r\n                    {/* Render LandingPage component with page prop passed in. */}\r\n                    {/* page prop will depend on how the user reaches the site (ex: localhost:3000/about vs localhost:3000/contact vs localhost:3000/) */}\r\n                    <Route path=\"/\" exact render={() => (\r\n                        <LandingPage page=\"\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/about\" render={() => (\r\n                        <LandingPage page=\"about\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"/contact\" render={() => (\r\n                        <LandingPage page=\"contact\" porespyFuncs={porespyFuncs} />\r\n                    )}/>\r\n                    <Route path=\"*\" component={NotFoundPage} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startSetPorespyFuncs: () => dispatch(startSetPorespyFuncs(porespyFuncs)),\r\n    startSetBackendEndpoint: () => dispatch(startSetBackendEndpoint(backendRootEndpoint))\r\n    // startSetStyles: () => dispatch(startSetStyles(classes))\r\n})\r\n\r\nexport default connect(undefined, mapDispatchToProps)(PoreSpyApp);\r\n",["255","256"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\LandingPage\\LandingPage.js",["257","258","259"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\AboutPage\\AboutPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Blobs\\Blobs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\LocalThickness\\LocalThickness.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ContactPage\\ContactPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderGenerator\\RenderGenerator.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderFilter\\RenderFilter.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderMetric\\RenderMetric.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\BundleOfTubes\\BundleOfTubes.js",["260"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\OverlappingSpheres\\OverlappingSpheres.js",[],["261","262"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PolydisperseSpheres\\PolydisperseSpheres.js",[],["263","264"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\VoronoiEdges\\VoronoiEdges.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\RSA\\RSA.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\PerlinNoise\\PerlinNoise.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\InsertShape\\InsertShape.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\Cylinders\\Cylinders.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LatticeSpheres\\LatticeSpheres.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\LineSegment\\LineSegment.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\porespyfuncs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\store\\configureStore.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\backend.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\NotFoundPage\\NotFoundPage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fieldValidators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\fileManipulators.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Generators\\UploadImage\\UploadImage.js",[],["265","266"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Generators\\GeneratedImages.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\ImagePanel\\ImagePanel.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\utils\\moduleNames.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\reducers\\Filters\\ImageToBeFiltered.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\actions\\Filters\\ImageToBeFiltered.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\RenderImage\\RenderImage.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Metrics\\PoreSizeDistribution\\PoreSizeDistribution.js",["267","268","269"],"//\r\n//  PoreSizeDistribution.js\r\n//  porespy-frontend\r\n//\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { integerOnlyField, floatOnlyBetweenOneAndZeroField, validateParams } from '../../../utils/fieldValidators';\r\nimport RenderImage from '../../RenderImage/RenderImage';\r\nimport './PoreSizeDistribution.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 210,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nlet metricsPSDImagesRedux = {};\r\n\r\nconst PoreSizeDistribution = (props) => {\r\n    const classes = useStyles();\r\n    const backendEndpoint = useSelector((state) => state.backend);\r\n    const chosenImageIndex = useSelector((state) => state.imageToBeFiltered);\r\n    const availableImages = useSelector((state) => state.generatedImages);\r\n    const chosenImage = chosenImageIndex !== \"\" ? availableImages[chosenImageIndex] : { img: \"\" };\r\n    const funcs = useSelector((state) => (state));\r\n    const fieldsInfo = funcs.porespyFuncs.hasOwnProperty('metrics') ? funcs.porespyFuncs.metrics[\"pore_size_distribution\"] : {};\r\n\r\n    if (fieldsInfo.hasOwnProperty(\"im\")) {\r\n        delete fieldsInfo[\"im\"];\r\n    }\r\n\r\n    if (fieldsInfo.hasOwnProperty(\"log\")) {\r\n        delete fieldsInfo[\"log\"];\r\n    }\r\n    \r\n    fieldsInfo[\"x_axis_label\"] = {\r\n        id: \"x_axis_labelinput\",\r\n        required: true,\r\n        type: \"null\",\r\n        value: \"Y Axis\"\r\n    };\r\n    \r\n    fieldsInfo[\"y_axis_label\"] = {\r\n        id: \"y_axis_labelinput\",\r\n        required: true,\r\n        type: \"null\",\r\n        value: \"X Axis\"\r\n    };\r\n\r\n    for (const entry in fieldsInfo) {\r\n        fieldsInfo[entry][\"id\"] = entry + \"input\";\r\n\r\n        switch (entry) {\r\n            case \"bins\":\r\n                fieldsInfo[entry][\"label\"] = \"Number of bins\";\r\n                fieldsInfo[entry][\"helperText\"] = \"Integer values only\";\r\n                break;\r\n            case \"voxel_size\":\r\n                fieldsInfo[entry][\"label\"] = \"Size of a voxel side\";\r\n                fieldsInfo[entry][\"helperText\"] = \"Integer values only\";\r\n                break;\r\n            case \"x_axis_label\":\r\n                fieldsInfo[entry][\"label\"] = \"X axis label\";\r\n                fieldsInfo[entry][\"helperText\"] = \"X axis label\";\r\n                break;\r\n            case \"y_axis_label\":\r\n                fieldsInfo[entry][\"label\"] = \"Y axis label\";\r\n                fieldsInfo[entry][\"helperText\"] = \"Y axis label\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const [params, setParams] = useState(fieldsInfo);\r\n    const [log, setLog] = useState(true);\r\n    const [xAxisLabel, setXAxisLabel] = useState(\"X Axis\");\r\n    const [yAxisLabel, setYAxisLabel] = useState(\"Y Axis\");\r\n    const [validatedParams, setValidatedParams] = useState(chosenImage === \"\");\r\n    const [metricImage, setMetricImage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const generatePoreSizeDistribution = () => {\r\n        setLoading(true);\r\n        setMetricImage(\"\");\r\n        const imgArrayJSON = JSON.stringify(chosenImage[\"img_array\"]);\r\n\r\n        setTimeout(() => {\r\n            axios.put(`${backendEndpoint}metrics/poresizedistribution/1/`, {\r\n                psd_im: imgArrayJSON,\r\n\r\n                bins: params[\"bins\"].value,\r\n                log,\r\n                voxel_size: params[\"voxel_size\"].value,\r\n                x_axis_label: xAxisLabel,\r\n                y_axis_label: yAxisLabel\r\n            }).then(({ data: { psd_im_metric } }) => {\r\n\r\n\r\n\r\n\r\n                \r\n                // TODO: add created metric image into redux\r\n\r\n\r\n\r\n                setMetricImage(psd_im_metric[\"base_64\"]);\r\n                // props.startSetImages();\r\n\r\n                setLoading(false);            \r\n            }).catch((e) => {\r\n                setMetricImage(\"\");\r\n                setLoading(false);\r\n                setError(true);\r\n                setErrorMessage(`Something is wrong... ${e.message}`);\r\n            });\r\n        }, 500);\r\n    }\r\n\r\n    const handleSelectChange = (e) => {\r\n        setLog(e.target.value === \"true\");\r\n    }\r\n\r\n    const parseEnteredValues = (e, property) => {\r\n        const tempParams = params;\r\n\r\n        if (property !== \"x_axis_label\" && property !== \"y_axis_label\") {\r\n            tempParams[property].value = integerOnlyField(e);\r\n        } else if (property === \"x_axis_label\") {\r\n            tempParams[property].value = e.target.value;\r\n            setXAxisLabel(e.target.value);\r\n        } else if (property === \"y_axis_label\") {\r\n            tempParams[property].value = e.target.value;\r\n            setYAxisLabel(e.target.value);\r\n        }\r\n\r\n        setParams(tempParams);\r\n        setValidatedParams(validateParams(params));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Pore Size Distribution\r\n            </div>\r\n            <div>\r\n                Calculate a pore-size distribution based on the image produced by the porosimetry or local_thickness functions.\r\n            </div>\r\n            <div>\r\n                Image chosen to apply filter on:\r\n            </div>\r\n            <div>\r\n                {\r\n                    chosenImage !== undefined && chosenImage[\"img\"] !== \"\"\r\n                    &&\r\n                    <img\r\n                        // className=\"\"\r\n                        src={`data:image/png;base64,${chosenImage[\"img\"]}`}\r\n                        alt={chosenImage[\"img\"]}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    Object.keys(params).map((p) => (\r\n                        <div>\r\n                            <TextField  \r\n                                required={params[p].required}\r\n                                id={params[p].id}\r\n                                label={params[p].label}\r\n                                defaultValue={params[p].value}\r\n                                helperText={params[p].helperText}\r\n                                variant={\"outlined\"}\r\n                                onInput={(e) => parseEnteredValues(e, p)}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                        Logarithmic data?\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-placeholder-label-label\"\r\n                        id=\"demo-simple-select-placeholder-label\"\r\n                        value={log}\r\n                        onChange={(e) => handleSelectChange(e)}\r\n                        displayEmpty\r\n                        className={classes.selectEmpty}\r\n                    >\r\n                        <MenuItem value=\"true\">\r\n                            True\r\n                        </MenuItem>\r\n                        <MenuItem value=\"false\">\r\n                            False\r\n                        </MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>\r\n                        Logarithmic data?\r\n                    </FormHelperText>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => generatePoreSizeDistribution()}\r\n                    disabled={(validatedParams || chosenImage === undefined || chosenImage[\"img\"] === \"\")}\r\n                    style={{ minWidth: '170px', minHeight: '16px'}}\r\n                >\r\n                    Create metric\r\n                </Button>\r\n            </div>\r\n\r\n            <div>\r\n                <div>\r\n                    Pore Size Distribution Metric:\r\n                </div>\r\n                <RenderImage \r\n                    imgString={metricImage}\r\n                    loading={loading}\r\n                    error={error}\r\n                    erroMessage={errorMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     startSetImages: () => dispatch(startSetImages(metricsPSDImagesRedux))\r\n// })\r\n\r\nexport default connect(undefined, undefined)(PoreSizeDistribution);\r\n","C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyChords\\ApplyChords.js",[],["270","271"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyChords3D\\ApplyChords3D.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ApplyPadded\\ApplyPadded.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ChunkedFunc\\ChunkedFunc.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\DistanceTransformLin\\DistanceTransformLin.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\Fftmorphology\\Fftmorphology.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FillBlindPores\\FillBlindPores.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindDisconnectedVoxels\\FindDisconnectedVoxels.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindDtArtifacts\\FindDtArtifacts.js",[],["272","273"],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\Flood\\Flood.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\FindPeaks\\FindPeaks.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\HoldPeaks\\HoldPeaks.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\PruneBranches\\PruneBranches.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\ReducePeaks\\ReducePeaks.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\NphaseBorder\\NphaseBorder.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\SnowPartitioningN\\SnowPartitioningN.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimDisconnectedBlobs\\TrimDisconnectedBlobs.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimNonpercolatingPaths\\TrimNonpercolatingPaths.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\RegionSize\\RegionSize.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimSaddlePoints\\TrimSaddlePoints.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\SnowPartitioning\\SnowPartitioning.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimExtrema\\TrimExtrema.js",[],"C:\\Users\\Andres\\ReactProjects\\porespy-frontend\\src\\components\\Filters\\TrimNearbyPeaks\\TrimNearbyPeaks.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":7,"column":35,"nodeType":"280","messageId":"281","endLine":7,"endColumn":43},{"ruleId":"278","severity":1,"message":"282","line":26,"column":9,"nodeType":"280","messageId":"281","endLine":26,"endColumn":24},{"ruleId":"274","replacedBy":"283"},{"ruleId":"276","replacedBy":"284"},{"ruleId":"278","severity":1,"message":"285","line":46,"column":12,"nodeType":"280","messageId":"281","endLine":46,"endColumn":20},{"ruleId":"278","severity":1,"message":"286","line":47,"column":12,"nodeType":"280","messageId":"281","endLine":47,"endColumn":25},{"ruleId":"287","severity":1,"message":"288","line":189,"column":9,"nodeType":"289","messageId":"290","endLine":189,"endColumn":13},{"ruleId":"278","severity":1,"message":"291","line":6,"column":27,"nodeType":"280","messageId":"281","endLine":6,"endColumn":36},{"ruleId":"274","replacedBy":"292"},{"ruleId":"276","replacedBy":"293"},{"ruleId":"274","replacedBy":"294"},{"ruleId":"276","replacedBy":"295"},{"ruleId":"274","replacedBy":"296"},{"ruleId":"276","replacedBy":"297"},{"ruleId":"278","severity":1,"message":"291","line":6,"column":27,"nodeType":"280","messageId":"281","endLine":6,"endColumn":36},{"ruleId":"278","severity":1,"message":"298","line":17,"column":28,"nodeType":"280","messageId":"281","endLine":17,"endColumn":59},{"ruleId":"278","severity":1,"message":"299","line":31,"column":5,"nodeType":"280","messageId":"281","endLine":31,"endColumn":26},{"ruleId":"274","replacedBy":"300"},{"ruleId":"276","replacedBy":"301"},{"ruleId":"274","replacedBy":"302"},{"ruleId":"276","replacedBy":"303"},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'backendInterval' is assigned a value but never used.",["304"],["305"],"'chosenIO' is assigned a value but never used.","'chosenNetwork' is assigned a value but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'useEffect' is defined but never used.",["304"],["305"],["304"],["305"],["304"],["305"],"'floatOnlyBetweenOneAndZeroField' is defined but never used.","'metricsPSDImagesRedux' is assigned a value but never used.",["304"],["305"],["304"],["305"],"no-global-assign","no-unsafe-negation"]